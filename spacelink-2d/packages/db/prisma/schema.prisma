generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(cuid())
  username String  @unique
  password String  
  avatarId String?
  role     Role
  spaces   Space[]
  avatar Avatar? @relation(fields: [avatarId], references: [id])
}

model Space {
  id        String  @id @unique @default(cuid())
  name      String
  width     String
  height    String
  thumbnail String?
  creatorId String
  creator   User @relation(fields: [creatorId], references: [id])
  spaceElements SpaceElements[]
}

model SpaceElements {
  id        String @id @unique @default(cuid())
  elementId String
  spaceId   String
  x         Int
  y         Int
  space Space @relation(fields: [spaceId], references: [id])
  element Element @relation(fields: [elementId], references: [id])
	@@map("spaceElements")
}

model Element {
  id       String @id @unique @default(cuid())
  width    Int
  height   Int
  imageUrl String
  static Boolean
  spaces SpaceElements[]
  maps MapElements[]
}

model Map {
  id     String  @id @unique @default(cuid())
  width  String
  height String
  name   String
  thumbnail String
  mapElements MapElements[]
}

model MapElements {
  id        String  @id @unique @default(cuid())
  mapId     String
  elementId String
  x         Int
  y         Int
  element Element @relation(fields: [elementId], references: [id])
  map Map @relation(fields: [mapId], references: [id])
	@@map("mapElements")
}

model Avatar {
  id       String  @id @unique @default(cuid())
  imageUrl String?
  name     String?
  users User[]
}

enum Role {
  admin
  user
}